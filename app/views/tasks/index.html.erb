<%= render "header" %>

<div class='flex flex-col items-start px-40'>
    <div class='py-10 text-4xl'>
        <%=t('todo.title')%>
    </div>
    
    <%= link_to new_task_path, class:'button' do %>
        <%= t('todo.new_task')%>
    <% end %>

    <div class='flex flex-col justify-between items-start'>
        <%= form_with url: tasks_path, method: :get, local: true do%>
            <div class='flex gap-3 my-5'>
                <%= select_tag :sort, options_for_select(sort_options, session[:sort]), class: 'text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800'%>
                <%= select_tag :direction, options_for_select(direction_options, session[:direction]), class: 'text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800'%>
                <%= submit_tag t("todo.sort"), class: 'button'%>
            </div>
        <% end %>
        
        <%= search_form_for @q, url: tasks_path, method: :get, local: true do |f| %>
            <div class='flex gap-3 my-5 justify-center items-center'>
                <%= f.label :name_cont, Task.human_attribute_name(:name), class:'text-sm font-medium text-gray-900 dark:text-white'%>
                <%= f.text_field :name_cont, placeholder: t("todo.search_by_name"), class: 'bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500'%>
                <%= f.label :status_eq, Task.human_attribute_name(:status), class:'text-sm font-medium text-gray-900 dark:text-white'%>
                <%= f.select :status_eq, options_for_select(status_options), {include_blank: t("todo.all")}, class: 'text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800'%>
                <%= f.label :tags_in, Task.human_attribute_name(:tag), class: 'text-sm font-medium text-gray-900 dark:text-white'%>
                <div class="flex gap-5 justify-center items-center bg-gray-300 dark:bg-gray-700 dark:text-gray-400 rounded-lg px-5 py-3">
                    <% Tag.all.each do |tag| %>
                        <div class='flex flex-row gap-1'>
                            <%= check_box_tag "tags[]",
                                            tag.id,
                                            params[:tags]&.include?(tag.id),
                                            id: "task_tag_#{tag.name}",
                                            class:"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded-sm focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600" %>
                            <%= label_tag "task_tag_#{tag.name}", t(tag.name, scope: %i[activerecord attributes task tags]), class:'ms-2 text-sm font-medium text-gray-900 dark:text-gray-300' %>
                        </div>
                    <% end %>
                </div>
                <%= submit_tag t("todo.search"), class: 'button'%>
            </div>
        <% end %>
    </div>

    <div class='relative overflow-x-auto w-full'>
        <table class='w-full text-sm text-center rtl:text-right text-gray-500 dark:text-gray-400'>
            <thead class="text-xs text-gray-700 uppercase bg-gray-300 dark:bg-gray-700 dark:text-gray-400">
                <tr>
                    <% [:name, :create_time, :end_time, :status, :priority, :tag].each do |attr| %>
                        <th scope="col" class="px-6 py-3"><%= Task.human_attribute_name(attr)%></th>
                    <% end %>
                </tr>
            </thead>
            <tbody>
                <% @tasks.each do |task|%>
                    <tr onclick="window.location = '<%= task_path(task) %>'" class='bg-white border-b dark:bg-gray-800 dark:border-gray-700 border-gray-200 hover:bg-gray-200 dark:hover:bg-gray-900'>
                        <td scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white"><%= task.name %></td>
                        <td class='px-6 py-4'><%= task.create_time.strftime("%Y-%m-%d") %></td>
                        <td class='px-6 py-4'><%= task.end_time.strftime("%Y-%m-%d") %></td>
                        <td class='px-6 py-4'><%= t(task.status, scope: %i[activerecord attributes task statuses]) %></td>
                        <td class='px-6 py-4'><%= t(task.priority, scope: %i[activerecord attributes task priorities]) %></td>
                        <td class='px-6 py-4'>
                            <div class='flex flex-col gap-1'>
                            <% task.tags.each do |tag| %>
                                <div class='bg-gray-100 text-gray-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded-sm dark:bg-gray-700 dark:text-gray-300'>
                                    <%= t(tag.name, scope: %i[activerecord attributes task tags]) %>
                                </div>
                            <% end %>
                            </div>
                        </td>
                    </tr>
                <% end %>
            </tbody>
            
        </table>
    </div>
    <div class='flex justify-center items-center w-full my-4'>
        <%= render 'pagy/flowbite_nav', pagy: @pagy %>
    </div>

</div>

<script>
    const dropdownButton = document.getElementById("dropdownButton");
    const dropdownMenu = document.getElementById("dropdownMenu");

    dropdownButton.addEventListener("click", () => {
    dropdownMenu.classList.toggle("hidden");
    });

    const dropdownItems = document.querySelectorAll('#dropdownMenu a');
    const dropdownLabel = document.getElementById('dropdownLabel');
    const sortField = document.getElementById('sortField');

    dropdownItems.forEach(item => {
    item.addEventListener('click', (e) => {
        e.preventDefault();

        const label = item.textContent.trim();
        const value = item.dataset.value;

        dropdownLabel.textContent = label;
        sortField.value = value;

        dropdownMenu.classList.add("hidden");
    });
    });
</script>